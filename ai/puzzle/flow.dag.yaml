$schema: https://azuremlschemas.azureedge.net/promptflow/latest/Flow.schema.json
environment:
  python_requirements_txt: requirements.txt
inputs:
  domain:
    type: string
    default: python
  level:
    type: string
    default: Advanced
  topic:
    type: string
    default: recursive functions
  form:
    type: string
    default: function
  numErrors:
    type: int
    default: 0
  key:
    type: string
    default: ""
  complexity:
    type: int
    default: 0
  avoid:
    type: list
    default: []
outputs:
  gen:
    type: string
    reference: ${postprocess.output}
nodes:
- name: preprocess
  type: python
  source:
    type: code
    path: preprocess.py
  inputs:
    key: ${inputs.key}
    domain: ${inputs.domain}
- name: gen_program
  type: llm
  source:
    type: code
    path: gen_program.jinja2
  inputs:
    model: gpt-3.5-turbo
    max_tokens: 3900
    level: ${inputs.level}
    topic: ${inputs.topic}
    form: ${inputs.form}
    numBugs: ${inputs.numErrors}
    complexity: ${inputs.complexity}
    avoid: ${inputs.avoid}
    language: ${inputs.domain}
  connection: prod_conn
  api: chat
  activate:
    when: ${preprocess.output.domain}
    is: programming_old
- name: gen_history
  type: llm
  source:
    type: code
    path: gen_history.jinja2
  inputs:
    model: gpt-3.5-turbo
    max_tokens: 3900
    form: ${inputs.form}
    level: ${inputs.level}
    topic: ${inputs.topic}
    complexity: ${inputs.complexity}
    numErrors: ${inputs.numErrors}
    avoid: ${inputs.avoid}
  connection: prod_conn
  api: chat
  activate:
    when: ${preprocess.output.domain}
    is: history
- name: gen_chain
  type: llm
  source:
    type: code
    path: gen_chain.jinja2
  inputs:
    model: gpt-3.5-turbo
    max_tokens: 3900
    level: ${inputs.level}
    complexity: ${inputs.complexity}
    numErrors: ${inputs.numErrors}
    from: ${inputs.form}
    topic: ${inputs.topic}
    avoid: ${inputs.avoid}
  connection: prod_conn
  api: chat
  activate:
    when: ${preprocess.output.domain}
    is: chain
- name: postprocess
  type: python
  source:
    type: code
    path: post_process.py
  inputs:
    domain: ${preprocess.output.domain}
    prog: ${gen_program.output}
    hist: ${gen_history.output}
    chain: ${gen_chain.output}
- name: gen_6_validate
  type: python
  source:
    type: code
    path: gen_6_validate.py
  inputs: {}
- name: gen_5_bug
  type: llm
  source:
    type: code
    path: gen_5_bug.jinja2
  inputs:
    model: gpt-3.5-turbo
  connection: prod_conn
  api: chat
- name: gen_3_code
  type: llm
  source:
    type: code
    path: gen_4_code.jinja2
    model: gpt-3.5-turbo
    max_tokens: 3900
  inputs:
    model: gpt-3.5-turbo
    topic: ${inputs.topic}
    title: ${gen_1_title.output.title}
    task: ${gen_1_title.output.task}
    pseudocode: ${gen_2_description.output.code}
  connection: prod_conn
  api: chat
- name: gen_2_description
  type: llm
  source:
    type: code
    path: gen_2_description.jinja2
  inputs:
    model: gpt-3.5-turbo
    max_tokens: 3900
    topic: ${inputs.topic}
    title: ${gen_1_title.output.title}
    task: ${gen_1_title.output.task}
  connection: prod_conn
  api: chat
- name: gen_1_title
  type: llm
  source:
    type: code
    path: gen_1_title.jinja2
  inputs:
    model: gpt-3.5-turbo
    max_tokens: 3900
    topic: ${inputs.topic}
    avoid: ${inputs.avoid}
    language: ${inputs.domain}
  connection: prod_conn
  api: chat
  activate:
    when: ${preprocess.output.domain}
    is: programming
